basePath: /
definitions:
  models.AddRatingRequest:
    properties:
      comment:
        type: string
      rating:
        type: number
      user_id:
        type: string
    type: object
  models.PayOrderRequest:
    properties:
      card_number:
        type: string
      cvv:
        type: string
      expiry_date:
        type: string
      payment_method:
        type: string
    type: object
  models.UpdateOrderStatus:
    properties:
      status:
        type: string
    type: object
  models.UpdateShippingInfoRequest:
    properties:
      carrier:
        type: string
      estimated_delivery_date:
        type: string
      tracking_number:
        type: string
    type: object
  product_service.AddArtisanCategoryRequest:
    properties:
      artisan_id:
        type: string
      description:
        type: string
      name:
        type: string
    type: object
  product_service.AddProductCategoryRequest:
    properties:
      description:
        type: string
      name:
        type: string
    type: object
  product_service.AddProductCategoryResponse:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
    type: object
  product_service.AddProductRequest:
    properties:
      artisan_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  product_service.AddProductResponse:
    properties:
      artisan_id:
        type: string
      category_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  product_service.AddRatingResponse:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: string
      product_id:
        type: string
      rating:
        type: number
      user_id:
        type: string
    type: object
  product_service.CancelOrderRequest:
    properties:
      id:
        type: string
    type: object
  product_service.DeleteProductResponse:
    properties:
      message:
        type: string
    type: object
  product_service.EditProductRequest:
    properties:
      artisan_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
    type: object
  product_service.EditProductResponse:
    properties:
      artisan_id:
        type: string
      category_id:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  product_service.Item:
    properties:
      price:
        type: number
      product_id:
        type: string
      quantity:
        type: integer
    type: object
  product_service.Order:
    properties:
      created_at:
        type: string
      id:
        type: string
      shipping_address:
        type: string
      status:
        type: string
      total_amount:
        type: number
      updated_at:
        type: string
      user_id:
        type: string
    type: object
  product_service.PayOrderResponse:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
      status:
        type: string
      transaction_id:
        type: string
    type: object
  product_service.Payment:
    properties:
      amount:
        type: number
      created_at:
        type: string
      id:
        type: string
      order_id:
        type: string
      payment_method:
        type: string
      status:
        type: string
      transaction_id:
        type: string
    type: object
  product_service.PlaceOrderRequest:
    properties:
      items:
        items:
          $ref: '#/definitions/product_service.Item'
        type: array
      shipping_address:
        type: string
      status:
        type: string
      user_id:
        type: string
    type: object
  product_service.PlaceOrderResponse:
    properties:
      created_at:
        type: string
      id:
        type: string
      items:
        items:
          $ref: '#/definitions/product_service.Item'
        type: array
      shipping_address:
        type: string
      status:
        type: string
      total_price:
        type: number
      user_id:
        type: string
    type: object
  product_service.Product:
    properties:
      artisan_id:
        type: string
      category_id:
        type: string
      created_at:
        type: string
      description:
        type: string
      id:
        type: string
      name:
        type: string
      price:
        type: number
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  product_service.Rating:
    properties:
      comment:
        type: string
      created_at:
        type: string
      id:
        type: string
      product_id:
        type: string
      rating:
        type: number
      user_id:
        type: string
    type: object
  product_service.UpdateOrderStatusResponse:
    properties:
      id:
        type: string
      status:
        type: string
      updated_at:
        type: string
    type: object
  product_service.UpdateShippingInfoResponse:
    properties:
      carrier:
        type: string
      estimated_delivery_date:
        type: string
      order_id:
        type: string
      tracking_number:
        type: string
      updated_at:
        type: string
    type: object
host: localhost:8080
info:
  contact: {}
  description: This is a sample server for a restaurant reservation system.
  title: Artisan Connect
  version: "1.0"
paths:
  /api/v1/categories/artisan:
    post:
      consumes:
      - application/json
      description: Create new category for Product
      parameters:
      - description: user id
        in: query
        name: id
        required: true
        type: string
      - description: product category
        in: body
        name: Product_Category
        required: true
        schema:
          $ref: '#/definitions/product_service.AddProductCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.AddArtisanCategoryRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create New Category for Product
      tags:
      - Categories
  /api/v1/categories/product:
    post:
      consumes:
      - application/json
      description: Create new category for Product
      parameters:
      - description: product category
        in: body
        name: Product_Category
        required: true
        schema:
          $ref: '#/definitions/product_service.AddProductCategoryRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.AddProductCategoryResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create New Category for Product
      tags:
      - Categories
  /api/v1/orders:
    post:
      consumes:
      - application/json
      description: Place an order
      parameters:
      - description: Place Order Request
        in: body
        name: order
        required: true
        schema:
          $ref: '#/definitions/product_service.PlaceOrderRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.PlaceOrderResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Place an order
      tags:
      - Orders
  /api/v1/orders/{id}:
    get:
      consumes:
      - application/json
      description: Get an order by its ID
      parameters:
      - description: order_id
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product_service.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get an order
      tags:
      - Orders
  /api/v1/orders/{id}/cancel:
    put:
      consumes:
      - application/json
      description: Cancel an order
      parameters:
      - description: Cancel Order Request
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.CancelOrderRequest'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Cancel an order
      tags:
      - Orders
  /api/v1/orders/{id}/payment/:
    get:
      consumes:
      - application/json
      description: Get Payment
      parameters:
      - description: payment id
        format: uuid
        in: query
        name: payment_id
        required: true
        type: string
      - description: order_id
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product_service.Payment'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Check Payment
      tags:
      - Payment
  /api/v1/orders/{id}/shipping:
    put:
      consumes:
      - application/json
      description: Update shipping info in order table
      parameters:
      - description: order id
        in: path
        name: id
        required: true
        type: string
      - description: shipping info
        in: body
        name: ShippingInfo
        required: true
        schema:
          $ref: '#/definitions/models.UpdateShippingInfoRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.UpdateShippingInfoResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update shipping info
      tags:
      - Orders
  /api/v1/orders/{id}/status:
    put:
      consumes:
      - application/json
      description: Update an order status
      parameters:
      - description: Update Order Status Request
        in: path
        name: id
        required: true
        type: string
      - description: Update Order Status
        in: body
        name: Status
        required: true
        schema:
          $ref: '#/definitions/models.UpdateOrderStatus'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.UpdateOrderStatusResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update an order status
      tags:
      - Orders
  /api/v1/orders/{order_id}/pay:
    post:
      consumes:
      - application/json
      description: Pay for an Order with a card
      parameters:
      - description: order_id
        format: uuid
        in: path
        name: order_id
        required: true
        type: string
      - description: payment
        in: body
        name: Payment
        required: true
        schema:
          $ref: '#/definitions/models.PayOrderRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product_service.PayOrderResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Pay for an Order
      tags:
      - Payment
  /api/v1/orders/getall:
    get:
      consumes:
      - application/json
      description: Get all orders
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product_service.Order'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all orders
      tags:
      - Orders
  /api/v1/products/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a product by id
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.DeleteProductResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete Product
      tags:
      - Product
    get:
      consumes:
      - application/json
      description: Get a Product by its ID
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a Product
      tags:
      - Product
    put:
      consumes:
      - application/json
      description: Update a new product
      parameters:
      - description: product_id
        in: path
        name: Product_id
        required: true
        type: string
      - description: Update
        in: body
        name: UpdateProduct
        required: true
        schema:
          $ref: '#/definitions/product_service.EditProductRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/product_service.EditProductResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update Product
      tags:
      - Product
  /api/v1/products/{id}/ratings:
    get:
      consumes:
      - application/json
      description: Get all ratings for a product
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product_service.Rating'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get all ratings for a product
      tags:
      - Product
  /api/v1/products/{product_id}/rate:
    post:
      consumes:
      - application/json
      description: Rate a product
      parameters:
      - description: Product ID
        format: uuid
        in: path
        name: product_id
        required: true
        type: string
      - description: rating a product
        in: body
        name: AddRatingRequest
        required: true
        schema:
          $ref: '#/definitions/models.AddRatingRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product_service.AddRatingResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Rate A Product
      tags:
      - Product
  /api/v1/products/all:
    get:
      consumes:
      - application/json
      description: get all products in page by limit
      parameters:
      - description: limit
        in: query
        name: limit
        required: true
        type: string
      - description: page
        in: query
        name: page
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product_service.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get All Products
      tags:
      - Product
  /api/v1/products/create:
    post:
      consumes:
      - application/json
      description: Creating a new product
      parameters:
      - description: Create
        in: body
        name: Add_Product_Request
        required: true
        schema:
          $ref: '#/definitions/product_service.AddProductRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/product_service.AddProductResponse'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Create Product
      tags:
      - Product
  /api/v1/products/search:
    post:
      consumes:
      - application/json
      description: Get a Product by its ID
      parameters:
      - description: product name
        in: query
        name: query
        type: string
      - description: category name
        in: query
        name: category
        type: string
      - description: minimum price
        in: query
        name: min_price
        type: string
      - description: maximum price
        in: query
        name: max_price
        type: string
      - description: limit
        in: query
        name: limit
        type: string
      - description: page
        in: query
        name: page
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/product_service.Product'
            type: array
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties:
              type: string
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get a Product
      tags:
      - Product
schemes:
- http
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
